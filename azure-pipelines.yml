# Node.js
- task: AzurePowerShell@5
  inputs:
    ScriptType: 'InlineScript'
    Inline: |
      # You can write your azure powershell scripts inline here. 
      # You can also pass predefined and custom variables to this script using arguments
      
     Invoke-RestMethod -uri 'https://online.acunetix360.com/api/1.0/scans/CreateFromPluginScanRequest' -ContentType 'application/json; charset=UTF-8' -Method POST -Headers @{ Authorization = "Basic $([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($env:ACUNETIXUSERID +':'+$env:ACUNETIXAPITOKEN)))"} -Body $(@{ WebsiteId='0a876e8a-2f4b-4ba9-2a4c-ab6f01fe4adf'; ScanType='FullWithPrimaryProfile'; VcsCommitInfoModel = @{CiBuildConfigurationName = $env:BUILD_DEFINITIONNAME; CiBuildHasChange = $env:BUILD_SOURCEVERSION; CiBuildId = $env:BUILD_BUILDID; CiBuildUrl= $env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI; Committer= $env:BUILD_REQUESTEDFOR; IntegrationSystem = 'AzureDevOps'; VcsName = $env:BUILD_REPOSITORY_PROVIDER; VcsVersion = $env:BUILD_SOURCEVERSION};}| ConvertTo-Json)
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'
